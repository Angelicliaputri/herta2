const xpperlimit = 1;
let handler = async (m, { conn, command, args }) => {
  let user = global.db.data.users[m.sender];
  let all = command.replace(/^atmall|nabungall|/i, "");
  let count = command.replace(/^nabung|atm/i, "");
  count = count
    ? /all/i.test(count)
      ? Math.floor(global.db.data.users[m.sender].money / xpperlimit)
      : parseInt(count)
    : args[0]
    ? parseInt(args[0])
    : 1;
  count = Math.max(1, count);
  if (user.atm == 0) return m.reply("[‚ùó] ·¥ã·¥Ä·¥ç·¥ú  ô·¥á ü·¥è·¥ç ·¥ç·¥á·¥ç·¥ò·¥ú…¥ è·¥Ä…™ ·¥ã·¥Ä Ä·¥õ·¥ú ·¥Ä·¥õ·¥ç ·¥ã·¥á·¥õ…™·¥ã .·¥Ñ Ä·¥Ä“ì·¥õ ·¥Ä·¥õ·¥ç ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á·¥ç ô·¥ú·¥Ä·¥õ ·¥Ä·¥õ·¥ç");
  if (user.bank > user.fullatm) return m.reply("[‚ùó] ·¥ú·¥Ä…¥…¢ ·¥Ö…™ ·¥Ä·¥õ·¥ç s·¥ú·¥Ö·¥Ä ú ·¥ò·¥á…¥·¥ú ú!, ·¥ú·¥ò…¢ Ä·¥Ä·¥Ö·¥á ·¥Ä·¥õ·¥ç ·¥Ö·¥á…¥…¢·¥Ä…¥ ·¥ã·¥á·¥õ…™·¥ã .·¥ú·¥ò…¢ Ä·¥Ä·¥Ö·¥á ·¥Ä·¥õ·¥ç");
  if (count > user.fullatm - user.bank)
    return m.reply("[‚ùó] ·¥ú·¥Ä…¥…¢…¥ è·¥Ä s·¥ú·¥Ö·¥Ä ú ·¥ç·¥á…¥·¥Ñ·¥Ä·¥ò·¥Ä…™  ô·¥Ä·¥õ·¥Äs!, ·¥ã·¥á·¥õ…™·¥ã .·¥ú·¥ò…¢ Ä·¥Ä·¥Ö·¥á ·¥Ä·¥õ·¥ç ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á·¥ç·¥ò·¥á Ä ü·¥ú·¥Äs  ü…™·¥ç…™·¥õ ·¥Ä·¥õ·¥ç");
  if (global.db.data.users[m.sender].money >= xpperlimit * count) {
    global.db.data.users[m.sender].money -= xpperlimit * count;
    global.db.data.users[m.sender].bank += count;
    conn.reply(m.chat, `s·¥ú·¥ãs·¥ás ·¥ç·¥á…¥·¥Ä ô·¥ú…¥…¢ s·¥á ô·¥ás·¥Ä Ä ${count} ·¥ç·¥è…¥·¥á è üíµ`, m);
  } else
    conn.reply(
      m.chat,
      `[‚ùó] ·¥ú·¥Ä…¥…¢ ·¥õ…™·¥Ö·¥Ä·¥ã ·¥Ñ·¥ú·¥ã·¥ú·¥ò ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á…¥·¥Ä ô·¥ú…¥…¢ s·¥á ô·¥ás·¥Ä Ä ${count} ·¥ç·¥è…¥·¥á è üíµ`,
      m
    );
};
handler.help = ["nabung <jumlah>"];
handler.tags = ["rpg"];
handler.command = ['atmall','nabung','nabungall','atm']
handler.rpg = true;
handler.group = true;
export default handler;
